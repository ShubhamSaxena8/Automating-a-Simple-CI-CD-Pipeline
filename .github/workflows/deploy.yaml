name: "Build and deploy"
on:
  # Triggers the workflow on push event with conditions
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  
  # Triggers the workflow on pull request event
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      force_deploy:
        description: "Force deploy"
        required: true
        default: false
        type: boolean

permissions:
  contents: read
  pages: write
  issues: write
  id-token: write

# Allow one deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # Setting an environment variable with the value of a configuration variable
      env_var: ${{ vars.ENV_CONTEXT_VAR }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm install
      
      - name: Run all the linters
        run: npm run lint:all

      # Run all the additional scripts that are required
      - name: Run all the scripts
        run: |
          node script/url-checker.js -t ${{ vars.URL_CHECKER_TIMEOUT }}

  build:
    runs-on: ubuntu-latest
    
    # This job will only run if the test job is successful
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Build distribution files
        run:
          PATH_PREFIX="/$(echo '${{ github.repository }}' | cut -d'/' -f2-)/"
          npm run prod

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site/"
  
  deploy:
    environment: 
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    # This job will only run if the build job is successful
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Report status
        run: |
          # Authenticate gh cli with the GITHUB_TOKEN
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

          # Create a new issue with the deployment status
          gh issue create \
            --repo ${{ github.repository }} \
            --title "$(date -u) - Deployment: ${{ steps.deployment.outcome }}" \
            --body "URL: ${{ steps.deployment.outputs.page_url }}"
